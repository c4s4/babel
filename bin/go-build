#!/bin/bash

set -e

# path to a GO installation (1.4 of more) needed to build GO 1.5 and up
export GOROOT_BOOTSTRAP=/opt/go/current

# help page
usage() {
    cat << EOF
usage: go-build [-h] [-u url] version
Build and install a given version of GO:
-h       Print this help page.
-u url   The URL of the archive to download.
version  The version to build and install (such as "1.10.4").
EOF
}

# Compare two version numbers $1 and $2
# Return 0 if equal, -1 if $1 < $2 and 1 if $1 > $2.
vercomp () {
    if [[ $1 == *"rc"* || $1 == *"beta"* ]]
    then
        echo "O"
        return
    fi
    if [[ $1 == $2 ]]
    then
        echo "0"
        return
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            echo "1"
            return
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            echo "-1"
            return
        fi
    done
    echo "0"
    return
}

# URL to download the archive
URL=
ARCHIVE_ROOT=https://storage.googleapis.com/golang
OLD_ROOT=https://go.googlecode.com/files

# read command line arguments
while getopts “hu:” OPTION
do
     case ${OPTION} in
         h)
             usage
             exit
             ;;
         u)
             URL=${OPTARG}
             ;;
         ?)
             usage
             exit 1
             ;;
     esac
done

# remove the switches we parsed above
shift `expr ${OPTIND} - 1`

# get version on command line
if [[ $# != 1 ]]
then
    echo "Missing version!"
    usage
    exit 1
else
    VERSION=$1
fi

# check that install directory doesn't exist
INSTALL_DIR=/opt/go/${VERSION}

if [ -d ${INSTALL_DIR} ]
then
    echo "Destination directory '${INSTALL_DIR}' already exists, aborting!"
    exit 1
fi

# change download URL for GO 1.1 and earlier
if (( `vercomp ${VERSION} 1.2.2` < 0 ))
then
    ARCHIVE_ROOT=${OLD_ROOT}
fi

# download source archive
if [[ -z $URL ]]
then
    ARCHIVE_FILE=go${VERSION}.src.tar.gz
    ARCHIVE_URL=${ARCHIVE_ROOT}/${ARCHIVE_FILE}
else
    ARCHIVE_FILE=${URL##*/}
    ARCHIVE_URL=${URL}
fi

# download, expand archive and move to installation directory
cd /tmp
wget ${ARCHIVE_URL}
tar xvf ${ARCHIVE_FILE}
rm ${ARCHIVE_FILE}

# move directory to destination and build from sources
sudo mv go ${INSTALL_DIR}
cd ${INSTALL_DIR}/src
bash all.bash
sudo chown -R root: ${INSTALL_DIR}
